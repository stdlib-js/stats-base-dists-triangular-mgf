{
  "version": 3,
  "sources": ["../lib/phi2.js", "../lib/main.js", "../lib/factory.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar expm1 = require( '@stdlib/math-base-special-expm1' );\n\n\n// MAIN //\n\n/**\n* Helper function for repeated computation in the MGF formula.\n*\n* @private\n* @param {number} x - input value\n* @returns {number} evaluated result\n*/\nfunction phi2( x ) {\n\tif ( x === 0.0 ) {\n\t\treturn 1.0;\n\t}\n\treturn ( 2.0 * ( expm1( x ) - x ) ) / ( x*x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = phi2;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar exp = require( '@stdlib/math-base-special-exp' );\nvar phi2 = require( './phi2.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the moment-generating function (MGF) for a triangular distribution with lower limit `a`, upper limit `b`, and mode `c` at a value `t`.\n*\n* @param {number} t - input value\n* @param {number} a - lower limit\n* @param {number} b - upper limit\n* @param {number} c - mode\n* @returns {number} evaluated MGF\n*\n* @example\n* var y = mgf( 0.5, -1.0, 1.0, 0.0 );\n* // returns ~1.021\n*\n* @example\n* var y = mgf( 0.5, -1.0, 1.0, 0.5 );\n* // returns ~1.111\n*\n* @example\n* var y = mgf( -0.3, -20.0, 0.0, -2.0 );\n* // returns ~24.334\n*\n* @example\n* var y = mgf( -2.0, -1.0, 1.0, 0.0 );\n* // returns ~1.381\n*\n* @example\n* var y = mgf( NaN, 0.0, 1.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = mgf( 0.0, NaN, 1.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = mgf( 0.0, 0.0, NaN, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = mgf( 0.5, 1.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* var y = mgf( 0.5, 1.0, 0.0, 1.5 );\n* // returns NaN\n*/\nfunction mgf( t, a, b, c ) {\n\tif (\n\t\tisnan( t ) ||\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\tisnan( c ) ||\n\t\ta > c ||\n\t\tc > b\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( a < c ) {\n\t\tif ( c < b ) {\n\t\t\treturn exp( c*t ) * ( ( (c-a)*phi2( (a-c)*t ) ) + ( (b-c)*phi2( (b-c)*t ) ) ) / ( b-a ); // eslint-disable-line max-len\n\t\t}\n\t\treturn exp( c*t ) * phi2( ( a-c ) * t );\n\t}\n\tif ( c < b ) {\n\t\treturn exp( c*t ) * phi2( ( b-c ) * t );\n\t}\n\treturn exp( c*t );\n}\n\n\n// EXPORTS //\n\nmodule.exports = mgf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils-constant-function' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar exp = require( '@stdlib/math-base-special-exp' );\nvar phi2 = require( './phi2.js' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the moment-generating function (MGF) for a triangular distribution with lower limit `a`, upper limit `b`, and mode `c`.\n*\n* @param {number} a - lower limit\n* @param {number} b - upper limit\n* @param {number} c - mode\n* @returns {Function} MGF\n*\n* @example\n* var mgf = factory( 0.0, 2.0, 1.0 );\n* var y = mgf( -1.0 );\n* // returns ~0.3996\n*\n* y = mgf( 2.0 );\n* // returns ~10.205\n*/\nfunction factory( a, b, c ) {\n\tif (\n\t\tisnan( a ) ||\n\t\tisnan( b ) ||\n\t\tisnan( c ) ||\n\t\ta > c ||\n\t\tc > b\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn mgf;\n\n\t/**\n\t* Evaluates the moment-generating function (MGF) for a triangular distribution.\n\t*\n\t* @private\n\t* @param {number} t - input value\n\t* @returns {number} evaluated MGF\n\t*\n\t* @example\n\t* var y = mgf( 0.5 );\n\t* // returns <number>\n\t*/\n\tfunction mgf( t ) {\n\t\tif ( isnan( t ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( a < c ) {\n\t\t\tif ( c < b ) {\n\t\t\t\treturn exp( c*t ) * ( ( (c-a)*phi2( (a-c)*t ) ) + ( (b-c)*phi2( (b-c)*t ) ) ) / ( b-a ); // eslint-disable-line max-len\n\t\t\t}\n\t\t\treturn exp( c*t ) * phi2( ( a-c ) * t );\n\t\t}\n\t\tif ( c < b ) {\n\t\t\treturn exp( c*t ) * phi2( ( b-c ) * t );\n\t\t}\n\t\treturn exp( c*t );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the moment-generating function (MGF) for a triangular distribution.\n*\n* @module @stdlib/stats-base-dists-triangular-mgf\n*\n* @example\n* var mgf = require( '@stdlib/stats-base-dists-triangular-mgf' );\n*\n* var y = mgf( 0.5, -1.0, 1.0, 0.0 );\n* // returns ~1.021\n*\n* y = mgf( 0.5, -1.0, 1.0, 0.5 );\n* // returns ~1.111\n*\n* y = mgf( -0.3, -20.0, 0.0, -2.0 );\n* // returns ~24.334\n*\n* y = mgf( -2.0, -1.0, 1.0, 0.0 );\n* // returns ~1.381\n*\n* var mymgf = mgf.factory( 0.0, 2.0, 1.0 );\n* y = mymgf( -1.0 );\n* // returns ~0.3996\n*\n* y = mymgf( 2.0 );\n* // returns ~10.205\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EAYvD,SAASC,EAAMC,EAAI,CAClB,OAAKA,IAAM,EACH,EAEC,GAAQF,EAAOE,CAAE,EAAIA,IAAUA,EAAEA,EAC3C,CAKAH,EAAO,QAAUE,IC5CjB,IAAAE,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAM,QAAS,+BAAgC,EAC/CC,EAAO,IAkDX,SAASC,EAAKC,EAAGC,EAAGC,EAAGC,EAAI,CAC1B,OACCP,EAAOI,CAAE,GACTJ,EAAOK,CAAE,GACTL,EAAOM,CAAE,GACTN,EAAOO,CAAE,GACTF,EAAIE,GACJA,EAAID,EAEG,IAEHD,EAAIE,EACHA,EAAID,EACDL,EAAKM,EAAEH,CAAE,IAASG,EAAEF,GAAGH,GAAOG,EAAEE,GAAGH,CAAE,GAASE,EAAEC,GAAGL,GAAOI,EAAEC,GAAGH,CAAE,IAAUE,EAAED,GAE9EJ,EAAKM,EAAEH,CAAE,EAAIF,GAAQG,EAAEE,GAAMH,CAAE,EAElCG,EAAID,EACDL,EAAKM,EAAEH,CAAE,EAAIF,GAAQI,EAAEC,GAAMH,CAAE,EAEhCH,EAAKM,EAAEH,CAAE,CACjB,CAKAL,EAAO,QAAUI,ICpGjB,IAAAK,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAmB,QAAS,iCAAkC,EAC9DC,EAAQ,QAAS,iCAAkC,EACnDC,EAAM,QAAS,+BAAgC,EAC/CC,EAAO,IAqBX,SAASC,EAASC,EAAGC,EAAGC,EAAI,CAC3B,GACCN,EAAOI,CAAE,GACTJ,EAAOK,CAAE,GACTL,EAAOM,CAAE,GACTF,EAAIE,GACJA,EAAID,EAEJ,OAAON,EAAkB,GAAI,EAE9B,OAAOQ,EAaP,SAASA,EAAKC,EAAI,CACjB,OAAKR,EAAOQ,CAAE,EACN,IAEHJ,EAAIE,EACHA,EAAID,EACDJ,EAAKK,EAAEE,CAAE,IAASF,EAAEF,GAAGF,GAAOE,EAAEE,GAAGE,CAAE,GAASH,EAAEC,GAAGJ,GAAOG,EAAEC,GAAGE,CAAE,IAAUH,EAAED,GAE9EH,EAAKK,EAAEE,CAAE,EAAIN,GAAQE,EAAEE,GAAME,CAAE,EAElCF,EAAID,EACDJ,EAAKK,EAAEE,CAAE,EAAIN,GAAQG,EAAEC,GAAME,CAAE,EAEhCP,EAAKK,EAAEE,CAAE,CACjB,CACD,CAKAV,EAAO,QAAUK,ICvCjB,IAAIM,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAU,IAKdF,EAAaC,EAAM,UAAWC,CAAQ,EAKtC,OAAO,QAAUD",
  "names": ["require_phi2", "__commonJSMin", "exports", "module", "expm1", "phi2", "x", "require_main", "__commonJSMin", "exports", "module", "isnan", "exp", "phi2", "mgf", "t", "a", "b", "c", "require_factory", "__commonJSMin", "exports", "module", "constantFunction", "isnan", "exp", "phi2", "factory", "a", "b", "c", "mgf", "t", "setReadOnly", "main", "factory"]
}
